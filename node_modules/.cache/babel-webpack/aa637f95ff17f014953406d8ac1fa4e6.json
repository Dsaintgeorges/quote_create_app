{"ast":null,"code":"var fs = require('fs');\n\nvar os = require('os');\n\nvar path = require('path');\n\nvar file = require('./file');\n\nvar params = require('./params');\n\nvar helper = require('./helper');\n\nvar format = require('./format');\n\nvar builder = require('./builder');\n\nvar input = require('./input');\n\nvar preprocessor = require('./preprocessor');\n\nvar translator = require('./translator');\n\nvar converter = require('./converter');\n\nvar debug = require('debug')('carbone');\n\nvar dayjs = require('dayjs');\n\nvar locales = require('../formatters/_locale');\n\nvar carbone = {\n  /**\n   * This function is NOT asynchronous (It may create the template or temp directory synchronously)\n   * @param {Object} options {\n   *                           tempPath     : system temp directory by default\n   *                           templatePath : it will create the directory if it does not exists\n   *                           renderPath   : where rendered files are temporary saved. It will create the directory if it does not exists\n   *                           lang         : set default lang of carbone, can be overwrite in carbone.render options.lang\n   *                           timezone     : set default timezone of carbone, can be overwrite in carbone.render options.timezone\n   *                           translations : overwrite carbone translations object\n   *                           currencySource : currency of data, it depends on the locale if empty\n   *                           currencyTarget : default target currency when the formatter convCurr is used without target\n   *                                            it depends on the locale if empty\n   *                           currencyRates  : rates, based on EUR { EUR : 1, USD : 1.14 }\n   *                         }\n   */\n  set: function (options) {\n    for (var attr in options) {\n      if (params[attr] !== undefined) {\n        params[attr] = options[attr];\n      } else {\n        throw Error('Undefined options :' + attr);\n      }\n    }\n\n    if (options.templatePath !== undefined) {\n      if (fs.existsSync(params.templatePath) === false) {\n        fs.mkdirSync(params.templatePath, '0755');\n      }\n\n      if (fs.existsSync(path.join(params.templatePath, 'lang')) === false) {\n        fs.mkdirSync(path.join(params.templatePath, 'lang'), '0755');\n      }\n\n      if (options.translations === undefined) {\n        translator.loadTranslations(params.templatePath);\n      }\n    }\n\n    if (options.tempPath !== undefined && fs.existsSync(params.tempPath) === false) {\n      fs.mkdirSync(params.tempPath, '0755');\n    }\n\n    if (fs.existsSync(params.renderPath) === false) {\n      fs.mkdirSync(params.renderPath, '0755');\n    }\n\n    if (options.factories !== undefined || options.startFactory !== undefined) {\n      converter.init();\n    }\n\n    dayjs.tz.setDefault(params.timezone);\n    dayjs.locale(params.lang.toLowerCase());\n  },\n\n  /**\n   * Reset parameters (for test purpose)\n   */\n  reset: function () {\n    // manage node 0.8 / 0.10 differences\n    var _nodeVersion = process.versions.node.split('.');\n\n    var _tmpDir = parseInt(_nodeVersion[0], 10) === 0 && parseInt(_nodeVersion[1], 10) < 10 ? os.tmpDir() : os.tmpdir();\n\n    params.tempPath = _tmpDir;\n    params.templatePath = process.cwd();\n    params.renderPath = path.join(params.tempPath, 'carbone_render');\n    params.factories = 1;\n    params.attempts = 2;\n    params.startFactory = false;\n    params.factoryMemoryFileSize = 1;\n    params.factoryMemoryThreshold = 50;\n    params.converterFactoryTimeout = 60000;\n    params.uidPrefix = 'c';\n    params.pipeNamePrefix = '_carbone';\n    params.lang = 'en';\n    params.timezone = 'Europe/Paris';\n    params.translations = {};\n    params.currencySource = '';\n    params.currencyTarget = '';\n    params.currencyRates = {\n      EUR: 1,\n      USD: 1.14\n    };\n  },\n\n  /**\n   * Add a template in Carbone datastore (template path)\n   * @param {String}            fileId   Unique file name. All templates will be saved in the same folder (templatePath). It will overwrite if the template already exists.\n   * @param {String|Buffer}     data     The content of the template\n   * @param {Function}          callback(err) called when done\n   */\n  addTemplate: function (fileId, data, callback) {\n    /* if(path.isAbsolute(fileId)===true){  //possible with Node v0.11\n      return callback('The file id should not be an absolute path: '+fileId);\n    }*/\n    var _fullPath = path.join(params.templatePath, fileId);\n\n    fs.writeFile(_fullPath, data, function (err) {\n      callback(err);\n    });\n  },\n\n  /**\n   * add formatters\n   * @param {Object} formatters {toInt: function(d, args, agrs, ...)}\n   */\n  addFormatters: function (customFormatters) {\n    for (var f in customFormatters) {\n      input.formatters[f] = customFormatters[f];\n    }\n  },\n\n  /**\n   * Remove a template from the Carbone datastore (template path)\n   * @param  {String}   fileId   Unique file name.\n   * @param  {Function} callback(err)\n   */\n  removeTemplate: function (fileId, callback) {\n    var _fullPath = path.join(params.templatePath, fileId);\n\n    fs.unlink(_fullPath, callback);\n  },\n\n  /**\n   * Return the list of possible conversion format\n   * @param  {String} documentType  Must be 'document', 'web', 'graphics', 'spreadsheet', 'presentation'\n   * @return {Array}                List of format\n   */\n  listConversionFormats: function (documentType) {\n    var _res = [];\n\n    if (format[documentType] === undefined) {\n      throw Error('Unknown document type');\n    }\n\n    var _doc = format[documentType];\n\n    for (var attr in _doc) {\n      var _format = _doc[attr];\n      _format.id = attr;\n\n      _res.push(_format);\n    }\n\n    return _res;\n  },\n\n  /**\n   * Render XML directly\n   *\n   * @param {String}        xml          The XML\n   * @param {Object|Array}  data         The data\n   * @param {Object}        optionsRaw   The options raw\n   * @param {Function}      callbackRaw  The callback raw\n   */\n  renderXML: function (xml, data, optionsRaw, callbackRaw) {\n    input.parseOptions(optionsRaw, callbackRaw, function (options, callback) {\n      // Clean XML tags inside Carbone markers and translate\n      xml = preprocessor.preParseXML(xml, options);\n      return builder.buildXML(xml, data, options, callback);\n    });\n  },\n\n  /**\n   * Renders a template with given datas and return result to the callback function\n   *\n   * @param {String}       templatePath : file name of the template (or absolute path)\n   * @param {Object|Array} data : Datas to be inserted in the template represented by the {d.****}\n   * @param {Object}       optionsRaw [optional] : {\n   *                          'complement'   : {}    data which is represented by the {c.****}\n   *                          'convertTo'    : 'pdf' || { 'formatName', 'formatOptions'} Convert the document in the format specified\n   *                          'extension'    : 'odt' || undefined Specify the template extension\n   *                          'variableStr'  : ''    pre-declared variables,\n   *                          'lang'         : overwrite default lang. Ex. \"fr\"\n   *                          'timezone'     : set timezone for date formatters (Europe/Paris) by default\n   *                          'translations' : overwrite all loaded translations {fr: {}, en: {}, es: {}}\n   *                          'enum'         : { ORDER_STATUS : ['open', 'close', 'sent']\n   *                          'currencySource'   : currency of data, 'EUR'\n   *                          'currencyTarget' : default target currency when the formatter convCurr is used without target\n   *                          'currencyRates'  : rates, based on EUR { EUR : 1, USD : 1.14 }\n   *                          'hardRefresh'  : (default: false) if true, LibreOffice is used to render and refresh the content of the report at the end of Carbone process\n   *                          'renderPrefix' : If defined, it returns a path instead of a buffer, and it adds this prefix in the filename\n   *                                           The filename will contains also the report name URL Encoded\n   *                       }\n   * @param {Function}     callbackRaw(err, bufferOrPath, reportName) : Function called after generation with the result\n   */\n  render: function (templatePath, data, optionsRaw, callbackRaw) {\n    input.parseOptions(optionsRaw, callbackRaw, function (options, callback) {\n      // open the template (unzip if necessary)\n      file.openTemplate(templatePath, function (err, template) {\n        if (err) {\n          return callback(err, null);\n        } // Determine the template extension.\n\n\n        var _extension = file.detectType(template); // It takes the user defined one, or use the file type.\n\n\n        options.extension = optionsRaw.extension || _extension;\n\n        if (options.extension === null) {\n          return callback('Unknown input file type. It should be a docx, xlsx, pptx, odt, ods, odp, xhtml, html or an xml file');\n        } // check and clean convertTo object, options.convertTo contains a clean version of optionsRaw.convertTo\n\n\n        var _error = input.parseConvertTo(options, optionsRaw.convertTo);\n\n        if (_error) {\n          return callback(_error);\n        }\n\n        template.reportName = options.reportName;\n        template.extension = options.extension;\n        preprocessor.execute(template, options, function (err, template) {\n          if (err) {\n            return callback(err, null);\n          } // parse all files of the template\n\n\n          walkFiles(template, data, options, 0, function (err, report) {\n            if (err) {\n              return callback(err, null);\n            } // assemble all files and zip if necessary\n\n\n            file.buildFile(report, function (err, result) {\n              if (err) {\n                return callback(err, null);\n              }\n\n              convert(result, report.reportName, options, function (err, bufferOrFile) {\n                callback(err, bufferOrFile, report.reportName);\n              });\n            });\n          });\n        });\n      });\n    });\n  },\n\n  /**\n   * Decodes a rendered filename.\n   *\n   * When carbone.render is called with the options renderPrefix, the callback returns a path instead of a buffer\n   * The filename is built like this (3 distinct parts), with only alphanumeric characters to be able to write it on the disk safely\n   *\n   * <prefix><22-random-chars><encodedReportName.extension>\n   *\n   * This function decodes the part `<encodedReportName.extension>` `\n   *\n   * @param  {String}   pathOrFilename  The path or filename\n   * @param  {Integer}  prefixLength    The prefix length used in options.renderPrefix\n   * @return {Object}   {\n   *                      extension  : 'pdf',\n   *                      reportName : 'decoded filename'\n   *                    }\n   */\n  decodeRenderedFilename: function (pathOrFilename, prefixLength = 0) {\n    var _filename = path.basename(pathOrFilename);\n\n    var _extension = path.extname(_filename);\n\n    var _onlyReportName = _filename.slice(prefixLength + helper.RANDOM_STRING_LENGTH, -_extension.length);\n\n    return {\n      reportName: helper.decodeSafeFilename(_onlyReportName),\n      extension: _extension.slice(1)\n    };\n  },\n\n  /**\n   * Return the file extension\n   * @param {String} filePath File path\n   * @param {Function} callback\n   */\n  getFileExtension: function (filePath, callback) {\n    file.openTemplate(filePath, function (err, template) {\n      if (err) {\n        return callback(err);\n      }\n\n      var ext = file.detectType(template);\n\n      if (ext === null) {\n        return callback('Cannot detect file extension');\n      }\n\n      return callback(null, ext);\n    });\n  },\n\n  /**\n   * Convert a file format to another\n   *\n   * @param  {Buffer}   data      raw data returned by fs.readFile (no utf-8)\n   * @param  {Object}   options   Same as carbone.render\n   *                              {\n   *                                convertTo : pdf || {formatName, formatOptions}\n   *                                extension : 'csv'  // extension of input file returned by path.extname(filename).\n   *                                                   // It helps LibreOffice to understand the source format (mandatory for CSV files)\n   *                              }\n   * @param  {Function} callback  (err, result) result is a buffer (file converted)\n   */\n  convert: function (fileBuffer, optionsRaw, callbackRaw) {\n    input.parseOptions(optionsRaw, callbackRaw, function (options, callback) {\n      options.extension = optionsRaw.extension;\n\n      if (options.extension === null) {\n        return callback('Unknown input file type. options.extension should be equals to docx, xlsx, pptx, odt, ods, odp, xhtml, html or an xml');\n      }\n\n      var _error = input.parseConvertTo(options, optionsRaw.convertTo);\n\n      if (_error) {\n        return callback(_error);\n      }\n\n      convert(fileBuffer, undefined, options, callback);\n    });\n  },\n  formatters: input.formatters\n};\n/** ***************************************************************************************************************/\n\n/* Privates methods */\n\n/** ***************************************************************************************************************/\n\n/**\n * Parse and compute XML for all files of the template\n * @param  {Object}   template     template file returned by file.js\n * @param  {Object}   data         data to insert\n * @param  {Object}   options      {'complement', 'variables', ...}\n * @param  {Integer}  currentIndex currently visited files in the template\n * @param  {Function} callback(err, template)\n */\n\nfunction walkFiles(template, data, options, currentIndex, callback) {\n  if (currentIndex >= template.files.length) {\n    // we have parsed all files, now parse the reportName\n    if (template.reportName !== undefined) {\n      builder.buildXML(template.reportName, data, options, function (err, reportNameResult) {\n        template.reportName = reportNameResult;\n        callback(null, template);\n      });\n    } else {\n      callback(null, template);\n    }\n\n    return;\n  }\n\n  var _file = template.files[currentIndex];\n\n  if (_file.isMarked === true) {\n    builder.buildXML(_file.data, data, options, function (err, xmlResult) {\n      if (err) {\n        return callback(err, template);\n      }\n\n      _file.data = xmlResult;\n      process.nextTick(function () {\n        walkFiles(template, data, options, ++currentIndex, callback);\n      });\n    });\n  } else {\n    walkFiles(template, data, options, ++currentIndex, callback);\n  }\n}\n/**\n * { function_description }\n *\n * @param {Buffer}    inputFileBuffer  The input file buffer\n * @param {String}    customReportName user-defined report name computed by Carbone\n * @param {Function}  options          options coming from input.parseOptions and input.parseConvertTo\n *                                     {\n *                                       convertTo : {\n *                                         extension  : 'pdf',\n *                                         format     : 'writer_pdf_Export' // coming from lib/format.js\n *                                         optionsStr : '44,34,76',         // only for CSV\n *                                         filters    : {                   // only for PDF, JPG, ...\n *                                           ReduceImageResolution : true\n *                                         }\n *                                       }\n *                                       extension    : 'odt' || Force input template extension\n *                                       hardRefresh  : (default: false) if true, LibreOffice is used to render and refresh the content of the report at the end of Carbone process\n *                                       renderPrefix : If defined, it add a prefix to the report name\n *                                     }\n * @param {Function}  callback(err, bufferOrPath) return a path if renderPrefix is defined, a buffer otherwise\n */\n\n\nfunction convert(inputFileBuffer, customReportName, options, callback) {\n  const _convertTo = options.convertTo;\n\n  const _hasConversion = options.extension !== _convertTo.extension || options.hardRefresh === true;\n\n  const _isReturningBuffer = options.renderPrefix === undefined || options.renderPrefix === null; // If there is no conversion, and there is no renderPrefix, we return the buffer directly\n\n\n  if (_hasConversion === false && _isReturningBuffer === true) {\n    return callback(null, inputFileBuffer);\n  } // generate a unique random & safe filename\n\n\n  const _renderPrefix = (options.renderPrefix || '').replace(/[^0-9a-z-]/gi, '');\n\n  const _randomNamePart = helper.getRandomString();\n\n  const _customReportName = customReportName !== undefined ? customReportName : 'report';\n\n  const _renderFilename = _renderPrefix + _randomNamePart + helper.encodeSafeFilename(_customReportName) + '.' + _convertTo.extension;\n\n  const _renderFile = path.join(params.renderPath, _renderFilename); // no conversion, but return a path\n\n\n  if (_hasConversion === false) {\n    return fs.writeFile(_renderFile, inputFileBuffer, function (err) {\n      if (err) {\n        debug('Cannot write rendered file on disk' + err);\n        return callback('Cannot write rendered file on disk', null);\n      }\n\n      return callback(null, _renderFile);\n    });\n  } // A conversion is necessary, generate a intermediate file for the converter\n\n\n  const _intermediateFilename = _renderPrefix + _randomNamePart + '_tmp.' + options.extension;\n\n  const _intermediateFile = path.join(params.renderPath, _intermediateFilename);\n\n  fs.writeFile(_intermediateFile, inputFileBuffer, function (err) {\n    if (err) {\n      debug('Cannot write rendered file on disk' + err);\n      return callback('Cannot write rendered file on disk', null);\n    } // call the converter and tell him to generate directly the wanted filename\n\n\n    converter.convertFile(_intermediateFile, _convertTo.format, _convertTo.optionsStr, _renderFile, function (errConvert, outputFile) {\n      fs.unlink(_intermediateFile, function (err) {\n        if (err) {\n          debug('Cannot remove intermediate file before conversion ' + err);\n        }\n      });\n\n      if (errConvert) {\n        return callback(errConvert, null);\n      }\n\n      if (_isReturningBuffer === false) {\n        return callback(null, outputFile);\n      }\n\n      fs.readFile(outputFile, function (err, outputBuffer) {\n        fs.unlink(outputFile, function (err) {\n          if (err) {\n            debug('Cannot remove rendered file ' + err);\n          }\n        });\n\n        if (err) {\n          debug('Cannot returned file buffer ' + err);\n          return callback('Cannot returned file buffer', null);\n        }\n\n        callback(null, outputBuffer);\n      });\n    });\n  });\n} // add default formatters\n\n\ncarbone.addFormatters(require('../formatters/array.js'));\ncarbone.addFormatters(require('../formatters/condition.js'));\ncarbone.addFormatters(require('../formatters/date.js'));\ncarbone.addFormatters(require('../formatters/number.js'));\ncarbone.addFormatters(require('../formatters/string.js'));\ntranslator.loadTranslations(params.templatePath); // We must include all locales like this for PKG\n\nrequire('dayjs/locale/af.js');\n\nrequire('dayjs/locale/am.js');\n\nrequire('dayjs/locale/ar-dz.js');\n\nrequire('dayjs/locale/ar-kw.js');\n\nrequire('dayjs/locale/ar-ly.js');\n\nrequire('dayjs/locale/ar-ma.js');\n\nrequire('dayjs/locale/ar-sa.js');\n\nrequire('dayjs/locale/ar-tn.js');\n\nrequire('dayjs/locale/ar.js');\n\nrequire('dayjs/locale/az.js');\n\nrequire('dayjs/locale/be.js');\n\nrequire('dayjs/locale/bg.js');\n\nrequire('dayjs/locale/bi.js');\n\nrequire('dayjs/locale/bm.js');\n\nrequire('dayjs/locale/bn.js');\n\nrequire('dayjs/locale/bo.js');\n\nrequire('dayjs/locale/br.js');\n\nrequire('dayjs/locale/bs.js');\n\nrequire('dayjs/locale/ca.js');\n\nrequire('dayjs/locale/cs.js');\n\nrequire('dayjs/locale/cv.js');\n\nrequire('dayjs/locale/cy.js');\n\nrequire('dayjs/locale/da.js');\n\nrequire('dayjs/locale/de-at.js');\n\nrequire('dayjs/locale/de-ch.js');\n\nrequire('dayjs/locale/de.js');\n\nrequire('dayjs/locale/dv.js');\n\nrequire('dayjs/locale/el.js');\n\nrequire('dayjs/locale/en-au.js');\n\nrequire('dayjs/locale/en-ca.js');\n\nrequire('dayjs/locale/en-gb.js');\n\nrequire('dayjs/locale/en-ie.js');\n\nrequire('dayjs/locale/en-il.js');\n\nrequire('dayjs/locale/en-in.js');\n\nrequire('dayjs/locale/en-nz.js');\n\nrequire('dayjs/locale/en-sg.js');\n\nrequire('dayjs/locale/en-tt.js');\n\nrequire('dayjs/locale/en.js');\n\nrequire('dayjs/locale/eo.js');\n\nrequire('dayjs/locale/es-do.js');\n\nrequire('dayjs/locale/es-pr.js');\n\nrequire('dayjs/locale/es-us.js');\n\nrequire('dayjs/locale/es.js');\n\nrequire('dayjs/locale/et.js');\n\nrequire('dayjs/locale/eu.js');\n\nrequire('dayjs/locale/fa.js');\n\nrequire('dayjs/locale/fi.js');\n\nrequire('dayjs/locale/fo.js');\n\nrequire('dayjs/locale/fr-ca.js');\n\nrequire('dayjs/locale/fr-ch.js');\n\nrequire('dayjs/locale/fr.js');\n\nrequire('dayjs/locale/fy.js');\n\nrequire('dayjs/locale/ga.js');\n\nrequire('dayjs/locale/gd.js');\n\nrequire('dayjs/locale/gl.js');\n\nrequire('dayjs/locale/gom-latn.js');\n\nrequire('dayjs/locale/gu.js');\n\nrequire('dayjs/locale/he.js');\n\nrequire('dayjs/locale/hi.js');\n\nrequire('dayjs/locale/hr.js');\n\nrequire('dayjs/locale/ht.js');\n\nrequire('dayjs/locale/hu.js');\n\nrequire('dayjs/locale/hy-am.js');\n\nrequire('dayjs/locale/id.js');\n\nrequire('dayjs/locale/is.js');\n\nrequire('dayjs/locale/it-ch.js');\n\nrequire('dayjs/locale/it.js');\n\nrequire('dayjs/locale/ja.js');\n\nrequire('dayjs/locale/jv.js');\n\nrequire('dayjs/locale/ka.js');\n\nrequire('dayjs/locale/kk.js');\n\nrequire('dayjs/locale/km.js');\n\nrequire('dayjs/locale/kn.js');\n\nrequire('dayjs/locale/ko.js');\n\nrequire('dayjs/locale/ku.js');\n\nrequire('dayjs/locale/ky.js');\n\nrequire('dayjs/locale/lb.js');\n\nrequire('dayjs/locale/lo.js');\n\nrequire('dayjs/locale/lt.js');\n\nrequire('dayjs/locale/lv.js');\n\nrequire('dayjs/locale/me.js');\n\nrequire('dayjs/locale/mi.js');\n\nrequire('dayjs/locale/mk.js');\n\nrequire('dayjs/locale/ml.js');\n\nrequire('dayjs/locale/mn.js');\n\nrequire('dayjs/locale/mr.js');\n\nrequire('dayjs/locale/ms-my.js');\n\nrequire('dayjs/locale/ms.js');\n\nrequire('dayjs/locale/mt.js');\n\nrequire('dayjs/locale/my.js');\n\nrequire('dayjs/locale/nb.js');\n\nrequire('dayjs/locale/ne.js');\n\nrequire('dayjs/locale/nl-be.js');\n\nrequire('dayjs/locale/nl.js');\n\nrequire('dayjs/locale/nn.js');\n\nrequire('dayjs/locale/oc-lnc.js');\n\nrequire('dayjs/locale/pa-in.js');\n\nrequire('dayjs/locale/pl.js');\n\nrequire('dayjs/locale/pt-br.js');\n\nrequire('dayjs/locale/pt.js');\n\nrequire('dayjs/locale/ro.js');\n\nrequire('dayjs/locale/ru.js');\n\nrequire('dayjs/locale/rw.js');\n\nrequire('dayjs/locale/sd.js');\n\nrequire('dayjs/locale/se.js');\n\nrequire('dayjs/locale/si.js');\n\nrequire('dayjs/locale/sk.js');\n\nrequire('dayjs/locale/sl.js');\n\nrequire('dayjs/locale/sq.js');\n\nrequire('dayjs/locale/sr-cyrl.js');\n\nrequire('dayjs/locale/sr.js');\n\nrequire('dayjs/locale/ss.js');\n\nrequire('dayjs/locale/sv.js');\n\nrequire('dayjs/locale/sw.js');\n\nrequire('dayjs/locale/ta.js');\n\nrequire('dayjs/locale/te.js');\n\nrequire('dayjs/locale/tet.js');\n\nrequire('dayjs/locale/tg.js');\n\nrequire('dayjs/locale/th.js');\n\nrequire('dayjs/locale/tk.js');\n\nrequire('dayjs/locale/tl-ph.js');\n\nrequire('dayjs/locale/tlh.js');\n\nrequire('dayjs/locale/tr.js');\n\nrequire('dayjs/locale/tzl.js');\n\nrequire('dayjs/locale/tzm-latn.js');\n\nrequire('dayjs/locale/tzm.js');\n\nrequire('dayjs/locale/ug-cn.js');\n\nrequire('dayjs/locale/uk.js');\n\nrequire('dayjs/locale/ur.js');\n\nrequire('dayjs/locale/uz-latn.js');\n\nrequire('dayjs/locale/uz.js');\n\nrequire('dayjs/locale/vi.js');\n\nrequire('dayjs/locale/yo.js');\n\nrequire('dayjs/locale/zh-cn.js');\n\nrequire('dayjs/locale/zh-hk.js');\n\nrequire('dayjs/locale/zh-tw.js');\n\nrequire('dayjs/locale/zh.js'); // if DayJS does not have a locale defined with country code, define it\n// For example \"de-de\" does not exists in DaysJS, but \"de\" exists.\n// So add locale \"de-de\" in DaysJS\n\n\nfor (let _locale in locales) {\n  if (dayjs.Ls[_locale] === undefined) {\n    let _localeWithoutCountry = _locale.replace(/-\\S+/g, '');\n\n    if (dayjs.Ls[_localeWithoutCountry] !== undefined) {\n      dayjs.locale(_locale, dayjs.Ls[_localeWithoutCountry]);\n    }\n  }\n}\n\ndayjs.extend(require('dayjs/plugin/advancedFormat')); // Support Quarter, ...\n\ndayjs.extend(require('dayjs/plugin/localizedFormat')); // Support L LL LLLL\n\ndayjs.extend(require('dayjs/plugin/customParseFormat')); // Support custom format as input\n\ndayjs.extend(require('dayjs/plugin/utc'));\ndayjs.extend(require('dayjs/plugin/timezone'));\ndayjs.extend(require('dayjs/plugin/isoWeek'));\ndayjs.tz.setDefault('Europe/Paris');\ndayjs.locale('en');\n\nif (fs.existsSync(params.renderPath) === false) {\n  fs.mkdirSync(params.renderPath, '0755');\n}\n\nmodule.exports = carbone;","map":{"version":3,"sources":["/Users/doryan/Documents/Project/quoteCreator/node_modules/carbone/lib/index.js"],"names":["fs","require","os","path","file","params","helper","format","builder","input","preprocessor","translator","converter","debug","dayjs","locales","carbone","set","options","attr","undefined","Error","templatePath","existsSync","mkdirSync","join","translations","loadTranslations","tempPath","renderPath","factories","startFactory","init","tz","setDefault","timezone","locale","lang","toLowerCase","reset","_nodeVersion","process","versions","node","split","_tmpDir","parseInt","tmpDir","tmpdir","cwd","attempts","factoryMemoryFileSize","factoryMemoryThreshold","converterFactoryTimeout","uidPrefix","pipeNamePrefix","currencySource","currencyTarget","currencyRates","EUR","USD","addTemplate","fileId","data","callback","_fullPath","writeFile","err","addFormatters","customFormatters","f","formatters","removeTemplate","unlink","listConversionFormats","documentType","_res","_doc","_format","id","push","renderXML","xml","optionsRaw","callbackRaw","parseOptions","preParseXML","buildXML","render","openTemplate","template","_extension","detectType","extension","_error","parseConvertTo","convertTo","reportName","execute","walkFiles","report","buildFile","result","convert","bufferOrFile","decodeRenderedFilename","pathOrFilename","prefixLength","_filename","basename","extname","_onlyReportName","slice","RANDOM_STRING_LENGTH","length","decodeSafeFilename","getFileExtension","filePath","ext","fileBuffer","currentIndex","files","reportNameResult","_file","isMarked","xmlResult","nextTick","inputFileBuffer","customReportName","_convertTo","_hasConversion","hardRefresh","_isReturningBuffer","renderPrefix","_renderPrefix","replace","_randomNamePart","getRandomString","_customReportName","_renderFilename","encodeSafeFilename","_renderFile","_intermediateFilename","_intermediateFile","convertFile","optionsStr","errConvert","outputFile","readFile","outputBuffer","_locale","Ls","_localeWithoutCountry","extend","module","exports"],"mappings":"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AAO,CAAC,uBAAD,CAAP;;AACAA,OAAO,CAAC,uBAAD,CAAP;;AACAA,OAAO,CAAC,uBAAD,CAAP;;AACAA,OAAO,CAAC,uBAAD,CAAP;;AACAA,OAAO,CAAC,uBAAD,CAAP;;AACAA,OAAO,CAAC,uBAAD,CAAP;;AACAA,OAAO,CAAC,uBAAD,CAAP;;AACAA,OAAO,CAAC,uBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,uBAAD,CAAP;;AACAA,OAAO,CAAC,uBAAD,CAAP;;AACAA,OAAO,CAAC,uBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,uBAAD,CAAP;;AACAA,OAAO,CAAC,uBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,0BAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,uBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,uBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,uBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,uBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,wBAAD,CAAP;;AACAA,OAAO,CAAC,uBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,uBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,yBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,qBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,uBAAD,CAAP;;AACAA,OAAO,CAAC,qBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,qBAAD,CAAP;;AACAA,OAAO,CAAC,0BAAD,CAAP;;AACAA,OAAO,CAAC,qBAAD,CAAP;;AACAA,OAAO,CAAC,uBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,yBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,uBAAD,CAAP;;AACAA,OAAO,CAAC,uBAAD,CAAP;;AACAA,OAAO,CAAC,uBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP,C,CAEA;AACA;AACA;;;AACA,KAAK,IAAIqJ,OAAT,IAAoBvI,OAApB,EAA6B;AAC3B,MAAID,KAAK,CAACyI,EAAN,CAASD,OAAT,MAAsBlI,SAA1B,EAAqC;AACnC,QAAIoI,qBAAqB,GAAGF,OAAO,CAACf,OAAR,CAAgB,OAAhB,EAAyB,EAAzB,CAA5B;;AACA,QAAIzH,KAAK,CAACyI,EAAN,CAASC,qBAAT,MAAoCpI,SAAxC,EAAmD;AACjDN,MAAAA,KAAK,CAACsB,MAAN,CAAakH,OAAb,EAAsBxI,KAAK,CAACyI,EAAN,CAASC,qBAAT,CAAtB;AACD;AACF;AACF;;AAED1I,KAAK,CAAC2I,MAAN,CAAaxJ,OAAO,CAAC,6BAAD,CAApB,E,CAAyD;;AACzDa,KAAK,CAAC2I,MAAN,CAAaxJ,OAAO,CAAC,8BAAD,CAApB,E,CAAyD;;AACzDa,KAAK,CAAC2I,MAAN,CAAaxJ,OAAO,CAAC,gCAAD,CAApB,E,CAAyD;;AACzDa,KAAK,CAAC2I,MAAN,CAAaxJ,OAAO,CAAC,kBAAD,CAApB;AACAa,KAAK,CAAC2I,MAAN,CAAaxJ,OAAO,CAAC,uBAAD,CAApB;AACAa,KAAK,CAAC2I,MAAN,CAAaxJ,OAAO,CAAC,sBAAD,CAApB;AAEAa,KAAK,CAACmB,EAAN,CAASC,UAAT,CAAoB,cAApB;AACApB,KAAK,CAACsB,MAAN,CAAa,IAAb;;AAEA,IAAIpC,EAAE,CAACuB,UAAH,CAAclB,MAAM,CAACwB,UAArB,MAAqC,KAAzC,EAAgD;AAC9C7B,EAAAA,EAAE,CAACwB,SAAH,CAAanB,MAAM,CAACwB,UAApB,EAAgC,MAAhC;AACD;;AAED6H,MAAM,CAACC,OAAP,GAAiB3I,OAAjB","sourcesContent":["var fs = require('fs');\nvar os = require('os');\nvar path = require('path');\nvar file = require('./file');\nvar params = require('./params');\nvar helper = require('./helper');\nvar format = require('./format');\nvar builder = require('./builder');\nvar input = require('./input');\nvar preprocessor = require('./preprocessor');\nvar translator = require('./translator');\nvar converter = require('./converter');\nvar debug = require('debug')('carbone');\nvar dayjs = require('dayjs');\nvar locales = require('../formatters/_locale');\n\nvar carbone = {\n\n  /**\n   * This function is NOT asynchronous (It may create the template or temp directory synchronously)\n   * @param {Object} options {\n   *                           tempPath     : system temp directory by default\n   *                           templatePath : it will create the directory if it does not exists\n   *                           renderPath   : where rendered files are temporary saved. It will create the directory if it does not exists\n   *                           lang         : set default lang of carbone, can be overwrite in carbone.render options.lang\n   *                           timezone     : set default timezone of carbone, can be overwrite in carbone.render options.timezone\n   *                           translations : overwrite carbone translations object\n   *                           currencySource : currency of data, it depends on the locale if empty\n   *                           currencyTarget : default target currency when the formatter convCurr is used without target\n   *                                            it depends on the locale if empty\n   *                           currencyRates  : rates, based on EUR { EUR : 1, USD : 1.14 }\n   *                         }\n   */\n  set : function (options) {\n    for (var attr in options) {\n      if (params[attr] !== undefined) {\n        params[attr] = options[attr];\n      }\n      else {\n        throw Error('Undefined options :' + attr);\n      }\n    }\n    if (options.templatePath !== undefined) {\n      if (fs.existsSync(params.templatePath) === false) {\n        fs.mkdirSync(params.templatePath, '0755');\n      }\n      if (fs.existsSync(path.join(params.templatePath, 'lang')) === false) {\n        fs.mkdirSync(path.join(params.templatePath, 'lang'), '0755');\n      }\n      if (options.translations === undefined) {\n        translator.loadTranslations(params.templatePath);\n      }\n    }\n    if (options.tempPath !== undefined && fs.existsSync(params.tempPath) === false) {\n      fs.mkdirSync(params.tempPath, '0755');\n    }\n    if (fs.existsSync(params.renderPath) === false) {\n      fs.mkdirSync(params.renderPath, '0755');\n    }\n    if (options.factories !== undefined || options.startFactory !== undefined) {\n      converter.init();\n    }\n    dayjs.tz.setDefault(params.timezone);\n    dayjs.locale(params.lang.toLowerCase());\n  },\n\n  /**\n   * Reset parameters (for test purpose)\n   */\n  reset : function () {\n    // manage node 0.8 / 0.10 differences\n    var _nodeVersion = process.versions.node.split('.');\n    var _tmpDir = (parseInt(_nodeVersion[0], 10) === 0 && parseInt(_nodeVersion[1], 10) < 10) ? os.tmpDir() : os.tmpdir();\n\n    params.tempPath                = _tmpDir;\n    params.templatePath            = process.cwd();\n    params.renderPath              = path.join(params.tempPath, 'carbone_render');\n    params.factories               = 1;\n    params.attempts                = 2;\n    params.startFactory            = false;\n    params.factoryMemoryFileSize   = 1;\n    params.factoryMemoryThreshold  = 50;\n    params.converterFactoryTimeout = 60000;\n    params.uidPrefix               = 'c';\n    params.pipeNamePrefix          = '_carbone';\n    params.lang                    = 'en';\n    params.timezone                = 'Europe/Paris';\n    params.translations            = {};\n    params.currencySource          = '';\n    params.currencyTarget          = '';\n    params.currencyRates           = { EUR : 1, USD : 1.14 };\n  },\n\n  /**\n   * Add a template in Carbone datastore (template path)\n   * @param {String}            fileId   Unique file name. All templates will be saved in the same folder (templatePath). It will overwrite if the template already exists.\n   * @param {String|Buffer}     data     The content of the template\n   * @param {Function}          callback(err) called when done\n   */\n  addTemplate : function (fileId, data, callback) {\n    /* if(path.isAbsolute(fileId)===true){  //possible with Node v0.11\n      return callback('The file id should not be an absolute path: '+fileId);\n    }*/\n    var _fullPath = path.join(params.templatePath, fileId);\n    fs.writeFile(_fullPath, data, function (err) {\n      callback(err);\n    });\n  },\n\n  /**\n   * add formatters\n   * @param {Object} formatters {toInt: function(d, args, agrs, ...)}\n   */\n  addFormatters : function (customFormatters) {\n    for (var f in customFormatters) {\n      input.formatters[f] = customFormatters[f];\n    }\n  },\n\n  /**\n   * Remove a template from the Carbone datastore (template path)\n   * @param  {String}   fileId   Unique file name.\n   * @param  {Function} callback(err)\n   */\n  removeTemplate : function (fileId, callback) {\n    var _fullPath = path.join(params.templatePath, fileId);\n    fs.unlink(_fullPath, callback);\n  },\n\n\n  /**\n   * Return the list of possible conversion format\n   * @param  {String} documentType  Must be 'document', 'web', 'graphics', 'spreadsheet', 'presentation'\n   * @return {Array}                List of format\n   */\n  listConversionFormats : function (documentType) {\n    var _res = [];\n    if (format[documentType] === undefined) {\n      throw Error('Unknown document type');\n    }\n    var _doc = format[documentType];\n    for (var attr in _doc) {\n      var _format = _doc[attr];\n      _format.id = attr;\n      _res.push(_format);\n    }\n    return _res;\n  },\n\n  /**\n   * Render XML directly\n   *\n   * @param {String}        xml          The XML\n   * @param {Object|Array}  data         The data\n   * @param {Object}        optionsRaw   The options raw\n   * @param {Function}      callbackRaw  The callback raw\n   */\n  renderXML : function (xml, data, optionsRaw, callbackRaw) {\n    input.parseOptions(optionsRaw, callbackRaw, function (options, callback) {\n      // Clean XML tags inside Carbone markers and translate\n      xml = preprocessor.preParseXML(xml, options);\n      return builder.buildXML(xml, data, options, callback);\n    });\n  },\n\n  /**\n   * Renders a template with given datas and return result to the callback function\n   *\n   * @param {String}       templatePath : file name of the template (or absolute path)\n   * @param {Object|Array} data : Datas to be inserted in the template represented by the {d.****}\n   * @param {Object}       optionsRaw [optional] : {\n   *                          'complement'   : {}    data which is represented by the {c.****}\n   *                          'convertTo'    : 'pdf' || { 'formatName', 'formatOptions'} Convert the document in the format specified\n   *                          'extension'    : 'odt' || undefined Specify the template extension\n   *                          'variableStr'  : ''    pre-declared variables,\n   *                          'lang'         : overwrite default lang. Ex. \"fr\"\n   *                          'timezone'     : set timezone for date formatters (Europe/Paris) by default\n   *                          'translations' : overwrite all loaded translations {fr: {}, en: {}, es: {}}\n   *                          'enum'         : { ORDER_STATUS : ['open', 'close', 'sent']\n   *                          'currencySource'   : currency of data, 'EUR'\n   *                          'currencyTarget' : default target currency when the formatter convCurr is used without target\n   *                          'currencyRates'  : rates, based on EUR { EUR : 1, USD : 1.14 }\n   *                          'hardRefresh'  : (default: false) if true, LibreOffice is used to render and refresh the content of the report at the end of Carbone process\n   *                          'renderPrefix' : If defined, it returns a path instead of a buffer, and it adds this prefix in the filename\n   *                                           The filename will contains also the report name URL Encoded\n   *                       }\n   * @param {Function}     callbackRaw(err, bufferOrPath, reportName) : Function called after generation with the result\n   */\n  render : function (templatePath, data, optionsRaw, callbackRaw) {\n    input.parseOptions(optionsRaw, callbackRaw, function (options, callback) {\n      // open the template (unzip if necessary)\n      file.openTemplate(templatePath, function (err, template) {\n        if (err) {\n          return callback(err, null);\n        }\n        // Determine the template extension.\n        var _extension = file.detectType(template);\n        // It takes the user defined one, or use the file type.\n        options.extension = optionsRaw.extension || _extension;\n        if (options.extension === null) {\n          return callback('Unknown input file type. It should be a docx, xlsx, pptx, odt, ods, odp, xhtml, html or an xml file');\n        }\n        // check and clean convertTo object, options.convertTo contains a clean version of optionsRaw.convertTo\n        var _error = input.parseConvertTo(options, optionsRaw.convertTo);\n        if (_error) {\n          return callback(_error);\n        }\n        template.reportName = options.reportName;\n        template.extension = options.extension;\n        preprocessor.execute(template, options, function (err, template) {\n          if (err) {\n            return callback(err, null);\n          }\n          // parse all files of the template\n          walkFiles(template, data, options, 0, function (err, report) {\n            if (err) {\n              return callback(err, null);\n            }\n            // assemble all files and zip if necessary\n            file.buildFile(report, function (err, result) {\n              if (err) {\n                return callback(err, null);\n              }\n              convert (result, report.reportName, options, function (err, bufferOrFile) {\n                callback(err, bufferOrFile, report.reportName);\n              });\n            });\n          });\n        });\n      });\n    });\n  },\n\n  /**\n   * Decodes a rendered filename.\n   *\n   * When carbone.render is called with the options renderPrefix, the callback returns a path instead of a buffer\n   * The filename is built like this (3 distinct parts), with only alphanumeric characters to be able to write it on the disk safely\n   *\n   * <prefix><22-random-chars><encodedReportName.extension>\n   *\n   * This function decodes the part `<encodedReportName.extension>` `\n   *\n   * @param  {String}   pathOrFilename  The path or filename\n   * @param  {Integer}  prefixLength    The prefix length used in options.renderPrefix\n   * @return {Object}   {\n   *                      extension  : 'pdf',\n   *                      reportName : 'decoded filename'\n   *                    }\n   */\n  decodeRenderedFilename : function (pathOrFilename, prefixLength = 0) {\n    var _filename = path.basename(pathOrFilename);\n    var _extension = path.extname(_filename);\n    var _onlyReportName = _filename.slice(prefixLength + helper.RANDOM_STRING_LENGTH, -_extension.length);\n\n    return {\n      reportName : helper.decodeSafeFilename(_onlyReportName),\n      extension  : _extension.slice(1)\n    };\n  },\n\n  /**\n   * Return the file extension\n   * @param {String} filePath File path\n   * @param {Function} callback\n   */\n  getFileExtension : function (filePath, callback) {\n    file.openTemplate(filePath, function (err, template) {\n      if (err) {\n        return callback(err);\n      }\n\n      var ext = file.detectType(template);\n\n      if (ext === null) {\n        return callback('Cannot detect file extension');\n      }\n\n      return callback(null, ext);\n    });\n  },\n\n  /**\n   * Convert a file format to another\n   *\n   * @param  {Buffer}   data      raw data returned by fs.readFile (no utf-8)\n   * @param  {Object}   options   Same as carbone.render\n   *                              {\n   *                                convertTo : pdf || {formatName, formatOptions}\n   *                                extension : 'csv'  // extension of input file returned by path.extname(filename).\n   *                                                   // It helps LibreOffice to understand the source format (mandatory for CSV files)\n   *                              }\n   * @param  {Function} callback  (err, result) result is a buffer (file converted)\n   */\n  convert : function (fileBuffer, optionsRaw, callbackRaw) {\n    input.parseOptions(optionsRaw, callbackRaw, function (options, callback) {\n      options.extension = optionsRaw.extension;\n      if (options.extension === null) {\n        return callback('Unknown input file type. options.extension should be equals to docx, xlsx, pptx, odt, ods, odp, xhtml, html or an xml');\n      }\n      var _error = input.parseConvertTo(options, optionsRaw.convertTo);\n      if (_error) {\n        return callback(_error);\n      }\n      convert (fileBuffer, undefined, options, callback);\n    });\n  },\n\n  formatters : input.formatters\n};\n\n/** ***************************************************************************************************************/\n/* Privates methods */\n/** ***************************************************************************************************************/\n\n\n/**\n * Parse and compute XML for all files of the template\n * @param  {Object}   template     template file returned by file.js\n * @param  {Object}   data         data to insert\n * @param  {Object}   options      {'complement', 'variables', ...}\n * @param  {Integer}  currentIndex currently visited files in the template\n * @param  {Function} callback(err, template)\n */\nfunction walkFiles (template, data, options, currentIndex, callback) {\n  if (currentIndex >= template.files.length) {\n    // we have parsed all files, now parse the reportName\n    if (template.reportName !== undefined) {\n      builder.buildXML(template.reportName, data, options, function (err, reportNameResult) {\n        template.reportName = reportNameResult;\n        callback(null, template);\n      });\n    }\n    else {\n      callback(null, template);\n    }\n    return;\n  }\n  var _file = template.files[currentIndex];\n  if (_file.isMarked===true) {\n    builder.buildXML(_file.data, data, options, function (err, xmlResult) {\n      if (err) {\n        return callback(err, template);\n      }\n      _file.data = xmlResult;\n      process.nextTick(function () {\n        walkFiles(template, data, options, ++currentIndex, callback);\n      });\n    });\n  }\n  else {\n    walkFiles(template, data, options, ++currentIndex, callback);\n  }\n}\n\n\n/**\n * { function_description }\n *\n * @param {Buffer}    inputFileBuffer  The input file buffer\n * @param {String}    customReportName user-defined report name computed by Carbone\n * @param {Function}  options          options coming from input.parseOptions and input.parseConvertTo\n *                                     {\n *                                       convertTo : {\n *                                         extension  : 'pdf',\n *                                         format     : 'writer_pdf_Export' // coming from lib/format.js\n *                                         optionsStr : '44,34,76',         // only for CSV\n *                                         filters    : {                   // only for PDF, JPG, ...\n *                                           ReduceImageResolution : true\n *                                         }\n *                                       }\n *                                       extension    : 'odt' || Force input template extension\n *                                       hardRefresh  : (default: false) if true, LibreOffice is used to render and refresh the content of the report at the end of Carbone process\n *                                       renderPrefix : If defined, it add a prefix to the report name\n *                                     }\n * @param {Function}  callback(err, bufferOrPath) return a path if renderPrefix is defined, a buffer otherwise\n */\nfunction convert (inputFileBuffer, customReportName, options, callback) {\n  const _convertTo         = options.convertTo;\n  const _hasConversion     = options.extension !== _convertTo.extension || options.hardRefresh === true;\n  const _isReturningBuffer = options.renderPrefix === undefined || options.renderPrefix === null;\n\n  // If there is no conversion, and there is no renderPrefix, we return the buffer directly\n  if (_hasConversion === false && _isReturningBuffer === true) {\n    return callback(null, inputFileBuffer);\n  }\n\n  // generate a unique random & safe filename\n  const _renderPrefix     = (options.renderPrefix || '').replace(/[^0-9a-z-]/gi, '');\n  const _randomNamePart   = helper.getRandomString();\n  const _customReportName = customReportName !== undefined ? customReportName : 'report';\n  const _renderFilename   = _renderPrefix + _randomNamePart + helper.encodeSafeFilename(_customReportName) + '.' + _convertTo.extension;\n  const _renderFile       = path.join(params.renderPath, _renderFilename);\n\n  // no conversion, but return a path\n  if (_hasConversion === false) {\n    return fs.writeFile(_renderFile, inputFileBuffer, function (err) {\n      if (err) {\n        debug('Cannot write rendered file on disk' + err);\n        return callback('Cannot write rendered file on disk', null);\n      }\n      return callback(null, _renderFile);\n    });\n  }\n\n  // A conversion is necessary, generate a intermediate file for the converter\n  const _intermediateFilename = _renderPrefix + _randomNamePart + '_tmp.' + options.extension;\n  const _intermediateFile     = path.join(params.renderPath, _intermediateFilename);\n  fs.writeFile(_intermediateFile, inputFileBuffer, function (err) {\n    if (err) {\n      debug('Cannot write rendered file on disk' + err);\n      return callback('Cannot write rendered file on disk', null);\n    }\n    // call the converter and tell him to generate directly the wanted filename\n    converter.convertFile(_intermediateFile, _convertTo.format, _convertTo.optionsStr, _renderFile, function (errConvert, outputFile) {\n      fs.unlink(_intermediateFile, function (err) {\n        if (err) {\n          debug('Cannot remove intermediate file before conversion ' + err);\n        }\n      });\n      if (errConvert) {\n        return callback(errConvert, null);\n      }\n      if (_isReturningBuffer === false) {\n        return callback(null, outputFile);\n      }\n      fs.readFile(outputFile, function (err, outputBuffer) {\n        fs.unlink(outputFile, function (err) {\n          if (err) {\n            debug('Cannot remove rendered file ' + err);\n          }\n        });\n        if (err) {\n          debug('Cannot returned file buffer ' + err);\n          return callback('Cannot returned file buffer', null);\n        }\n        callback(null, outputBuffer);\n      });\n    });\n  });\n}\n\n\n// add default formatters\ncarbone.addFormatters(require('../formatters/array.js'));\ncarbone.addFormatters(require('../formatters/condition.js'));\ncarbone.addFormatters(require('../formatters/date.js'));\ncarbone.addFormatters(require('../formatters/number.js'));\ncarbone.addFormatters(require('../formatters/string.js'));\ntranslator.loadTranslations(params.templatePath);\n\n// We must include all locales like this for PKG\nrequire('dayjs/locale/af.js');\nrequire('dayjs/locale/am.js');\nrequire('dayjs/locale/ar-dz.js');\nrequire('dayjs/locale/ar-kw.js');\nrequire('dayjs/locale/ar-ly.js');\nrequire('dayjs/locale/ar-ma.js');\nrequire('dayjs/locale/ar-sa.js');\nrequire('dayjs/locale/ar-tn.js');\nrequire('dayjs/locale/ar.js');\nrequire('dayjs/locale/az.js');\nrequire('dayjs/locale/be.js');\nrequire('dayjs/locale/bg.js');\nrequire('dayjs/locale/bi.js');\nrequire('dayjs/locale/bm.js');\nrequire('dayjs/locale/bn.js');\nrequire('dayjs/locale/bo.js');\nrequire('dayjs/locale/br.js');\nrequire('dayjs/locale/bs.js');\nrequire('dayjs/locale/ca.js');\nrequire('dayjs/locale/cs.js');\nrequire('dayjs/locale/cv.js');\nrequire('dayjs/locale/cy.js');\nrequire('dayjs/locale/da.js');\nrequire('dayjs/locale/de-at.js');\nrequire('dayjs/locale/de-ch.js');\nrequire('dayjs/locale/de.js');\nrequire('dayjs/locale/dv.js');\nrequire('dayjs/locale/el.js');\nrequire('dayjs/locale/en-au.js');\nrequire('dayjs/locale/en-ca.js');\nrequire('dayjs/locale/en-gb.js');\nrequire('dayjs/locale/en-ie.js');\nrequire('dayjs/locale/en-il.js');\nrequire('dayjs/locale/en-in.js');\nrequire('dayjs/locale/en-nz.js');\nrequire('dayjs/locale/en-sg.js');\nrequire('dayjs/locale/en-tt.js');\nrequire('dayjs/locale/en.js');\nrequire('dayjs/locale/eo.js');\nrequire('dayjs/locale/es-do.js');\nrequire('dayjs/locale/es-pr.js');\nrequire('dayjs/locale/es-us.js');\nrequire('dayjs/locale/es.js');\nrequire('dayjs/locale/et.js');\nrequire('dayjs/locale/eu.js');\nrequire('dayjs/locale/fa.js');\nrequire('dayjs/locale/fi.js');\nrequire('dayjs/locale/fo.js');\nrequire('dayjs/locale/fr-ca.js');\nrequire('dayjs/locale/fr-ch.js');\nrequire('dayjs/locale/fr.js');\nrequire('dayjs/locale/fy.js');\nrequire('dayjs/locale/ga.js');\nrequire('dayjs/locale/gd.js');\nrequire('dayjs/locale/gl.js');\nrequire('dayjs/locale/gom-latn.js');\nrequire('dayjs/locale/gu.js');\nrequire('dayjs/locale/he.js');\nrequire('dayjs/locale/hi.js');\nrequire('dayjs/locale/hr.js');\nrequire('dayjs/locale/ht.js');\nrequire('dayjs/locale/hu.js');\nrequire('dayjs/locale/hy-am.js');\nrequire('dayjs/locale/id.js');\nrequire('dayjs/locale/is.js');\nrequire('dayjs/locale/it-ch.js');\nrequire('dayjs/locale/it.js');\nrequire('dayjs/locale/ja.js');\nrequire('dayjs/locale/jv.js');\nrequire('dayjs/locale/ka.js');\nrequire('dayjs/locale/kk.js');\nrequire('dayjs/locale/km.js');\nrequire('dayjs/locale/kn.js');\nrequire('dayjs/locale/ko.js');\nrequire('dayjs/locale/ku.js');\nrequire('dayjs/locale/ky.js');\nrequire('dayjs/locale/lb.js');\nrequire('dayjs/locale/lo.js');\nrequire('dayjs/locale/lt.js');\nrequire('dayjs/locale/lv.js');\nrequire('dayjs/locale/me.js');\nrequire('dayjs/locale/mi.js');\nrequire('dayjs/locale/mk.js');\nrequire('dayjs/locale/ml.js');\nrequire('dayjs/locale/mn.js');\nrequire('dayjs/locale/mr.js');\nrequire('dayjs/locale/ms-my.js');\nrequire('dayjs/locale/ms.js');\nrequire('dayjs/locale/mt.js');\nrequire('dayjs/locale/my.js');\nrequire('dayjs/locale/nb.js');\nrequire('dayjs/locale/ne.js');\nrequire('dayjs/locale/nl-be.js');\nrequire('dayjs/locale/nl.js');\nrequire('dayjs/locale/nn.js');\nrequire('dayjs/locale/oc-lnc.js');\nrequire('dayjs/locale/pa-in.js');\nrequire('dayjs/locale/pl.js');\nrequire('dayjs/locale/pt-br.js');\nrequire('dayjs/locale/pt.js');\nrequire('dayjs/locale/ro.js');\nrequire('dayjs/locale/ru.js');\nrequire('dayjs/locale/rw.js');\nrequire('dayjs/locale/sd.js');\nrequire('dayjs/locale/se.js');\nrequire('dayjs/locale/si.js');\nrequire('dayjs/locale/sk.js');\nrequire('dayjs/locale/sl.js');\nrequire('dayjs/locale/sq.js');\nrequire('dayjs/locale/sr-cyrl.js');\nrequire('dayjs/locale/sr.js');\nrequire('dayjs/locale/ss.js');\nrequire('dayjs/locale/sv.js');\nrequire('dayjs/locale/sw.js');\nrequire('dayjs/locale/ta.js');\nrequire('dayjs/locale/te.js');\nrequire('dayjs/locale/tet.js');\nrequire('dayjs/locale/tg.js');\nrequire('dayjs/locale/th.js');\nrequire('dayjs/locale/tk.js');\nrequire('dayjs/locale/tl-ph.js');\nrequire('dayjs/locale/tlh.js');\nrequire('dayjs/locale/tr.js');\nrequire('dayjs/locale/tzl.js');\nrequire('dayjs/locale/tzm-latn.js');\nrequire('dayjs/locale/tzm.js');\nrequire('dayjs/locale/ug-cn.js');\nrequire('dayjs/locale/uk.js');\nrequire('dayjs/locale/ur.js');\nrequire('dayjs/locale/uz-latn.js');\nrequire('dayjs/locale/uz.js');\nrequire('dayjs/locale/vi.js');\nrequire('dayjs/locale/yo.js');\nrequire('dayjs/locale/zh-cn.js');\nrequire('dayjs/locale/zh-hk.js');\nrequire('dayjs/locale/zh-tw.js');\nrequire('dayjs/locale/zh.js');\n\n// if DayJS does not have a locale defined with country code, define it\n// For example \"de-de\" does not exists in DaysJS, but \"de\" exists.\n// So add locale \"de-de\" in DaysJS\nfor (let _locale in locales) {\n  if (dayjs.Ls[_locale] === undefined) {\n    let _localeWithoutCountry = _locale.replace(/-\\S+/g, '');\n    if (dayjs.Ls[_localeWithoutCountry] !== undefined) {\n      dayjs.locale(_locale, dayjs.Ls[_localeWithoutCountry]);\n    }\n  }\n}\n\ndayjs.extend(require('dayjs/plugin/advancedFormat'));    // Support Quarter, ...\ndayjs.extend(require('dayjs/plugin/localizedFormat'));   // Support L LL LLLL\ndayjs.extend(require('dayjs/plugin/customParseFormat')); // Support custom format as input\ndayjs.extend(require('dayjs/plugin/utc'));\ndayjs.extend(require('dayjs/plugin/timezone'));\ndayjs.extend(require('dayjs/plugin/isoWeek'));\n\ndayjs.tz.setDefault('Europe/Paris');\ndayjs.locale('en');\n\nif (fs.existsSync(params.renderPath) === false) {\n  fs.mkdirSync(params.renderPath, '0755');\n}\n\nmodule.exports = carbone;"]},"metadata":{},"sourceType":"script"}